#Queries for Customer
insertLoyaltyProgram=
getRewardActivites=
getPurchaseDetails=
getLeaveAReviewDetails=
getReferdetails=
performPurchase=
performLeaveAReviewDetails=
performRefer=
viewWallet=Select * from U_Admin where userid = ?
checkRRRules=
redeemPoints=
getRewardTypeIdByName=Select rewid from RewardType where rewname = ?

#Queries for Brand
insertLoyalty=Insert into LoyaltyProgram(lpname, lpjoindate, bid, lptype) values ( ?, (SELECT SYSDATE FROM DUAL), ?, ?)
getLoyaltyProgram=SELECT lpid from LoyaltyProgram where ? = LoyaltyProgram.bid

selectActivityIDs=SELECT actid, actname from ActivityType
insertActivityInstance=Insert into ActivityInstance(lpid, actid) values (?, ?)
selectRewardIDs=SELECT rewid, rewname from RewardType
insertRewardInstance=Insert into RewardInstance(lpid, rewid) values (?, ?)
getCustId=Select Customer.cid from Customer, U_Admin where Customer.userid = u_admin.userid AND U_Admin.userid = ?
getBrandId=Select B.bid from Brand B join U_Admin U on B.userid = U.userid where U.userid = ?
updateRRRule=Update RRRules Set rrpoints = ? where rewid = ?
updateRERule=Update RERules Set repoints = ? where actid = ?
addRRRule=Insert into RRRules(rrpoints, rewid, lpid) values ( ?, ?, Select lpid from LoyaltyProgram where bid = ?)
addRERule=Insert into RERules(repoints, actid, lpid) values ( ?, ?, Select lpid from LoyaltyProgram where bid = ?)

#Queries for Admin


CREATE OR REPLACE TRIGGER lp_on_insert
  BEFORE INSERT ON LoyaltyProgram
  FOR EACH ROW
BEGIN
  SELECT books_sequence.nextval
  INTO :new.lpid
  FROM dual;
END;


 

 